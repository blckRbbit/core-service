plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'checkstyle'
    id 'org.liquibase.gradle' version '2.0.4'
}

apply from: './versions.gradle'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    gradlePluginPortal()
    maven { url 'https://jitpack.io' }
}

ext {
    set('springCloudVersion', "2022.0.0")
}

dependencies {
    implementation(platform('org.springframework.boot:spring-boot-dependencies:2.7.2'))
    implementation "com.github.shary2023:rest-api:${versions.restdoc}"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.kafka:spring-kafka'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"

    implementation "javax.xml.bind:jaxb-api:${versions.jaxbApi}"
    implementation 'org.postgresql:postgresql'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'org.liquibase:liquibase-core'

    compileOnly "org.projectlombok:lombok:${versions.lombok}"
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    testCompileOnly "org.projectlombok:lombok:${versions.lombok}"
    testAnnotationProcessor "org.projectlombok:lombok:${versions.lombok}"

    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:${versions.jacksonDataType}"
    implementation "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${versions.javaxPersistence}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

    testImplementation "org.testcontainers:junit-jupiter:${versions.testContainers}"
    testImplementation "org.testcontainers:postgresql:${versions.testContainers}"
}


dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}


